{
  "intents": [
    {
      "intent": "Find_restaurant",
      "examples": [
        {
          "text": "I am dying of hunger"
        },
        {
          "text": "I am hungry"
        },
        {
          "text": "I'd like a restaurant"
        },
        {
          "text": "I need to eat"
        },
        {
          "text": "I would like to find a restaurant"
        }
      ],
      "description": ""
    }
  ],
  "entities": [
    {
      "entity": "categories",
      "values": [
        {
          "type": "synonyms",
          "value": "burger",
          "synonyms": ["burgers", "hamburgers", "ihop", "kfc", "whopper"]
        },
        {
          "type": "synonyms",
          "value": "french",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "german",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "greek",
          "synonyms": ["cretan", "hellenic"]
        },
        {
          "type": "synonyms",
          "value": "indian",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "italian",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "pizza",
          "synonyms": ["pizzas", "pizzeria"]
        },
        {
          "type": "synonyms",
          "value": "spanish",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "thai",
          "synonyms": []
        }
      ],
      "fuzzy_match": true
    },
    {
      "entity": "city",
      "values": [
        {
          "type": "synonyms",
          "value": "athens",
          "synonyms": [
            "ioannina",
            "istanbul",
            "kalamata",
            "marousi",
            "nicosia",
            "patras",
            "piraeus",
            "thessaloniki",
            "volos",
            "zappeion"
          ]
        },
        {
          "type": "synonyms",
          "value": "berlin",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "chicago",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "Dallas",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "frankfurt",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "munich",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "New York",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "paris",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "san francisco",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "Seattle",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "Split",
          "synonyms": []
        },
        {
          "type": "synonyms",
          "value": "Stuttgart",
          "synonyms": []
        }
      ],
      "fuzzy_match": true
    },
    {
      "entity": "money",
      "values": [
        {
          "type": "synonyms",
          "value": "1",
          "synonyms": []
        }
      ],
      "fuzzy_match": true
    },
    {
      "entity": "sys-currency",
      "values": [],
      "fuzzy_match": true
    },
    {
      "entity": "sys-date",
      "values": [],
      "fuzzy_match": true
    },
    {
      "entity": "sys-number",
      "values": [],
      "fuzzy_match": true
    },
    {
      "entity": "sys-time",
      "values": [],
      "fuzzy_match": true
    }
  ],
  "metadata": {
    "api_version": {
      "major_version": "v2",
      "minor_version": "2018-11-08"
    }
  },
  "webhooks": [
    {
      "url": "",
      "name": "main_webhook",
      "headers": []
    }
  ],
  "dialog_nodes": [
    {
      "type": "standard",
      "title": "Anything else",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I didn't understand. You can try rephrasing."
              },
              {
                "text": "Can you reword your statement? I'm not understanding."
              },
              {
                "text": "I didn't get your meaning."
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "context": {
        "action": "none"
      },
      "conditions": "anything_else",
      "dialog_node": "Anything else",
      "previous_sibling": "node_9_1623668808871",
      "disambiguation_opt_out": true
    },
    {
      "type": "event_handler",
      "output": {},
      "parent": "slot_2_1623153090545",
      "context": {
        "city": "@city"
      },
      "conditions": "@city",
      "event_name": "input",
      "dialog_node": "handler_2_1623153090552"
    },
    {
      "type": "event_handler",
      "output": {},
      "parent": "slot_5_1623153104801",
      "context": {
        "category": "@categories"
      },
      "conditions": "@categories",
      "event_name": "input",
      "dialog_node": "handler_2_1623153104802"
    },
    {
      "type": "event_handler",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "Where do you want me to search for a restaurant? (you can provide the name of the city)"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "slot_2_1623153090545",
      "event_name": "focus",
      "dialog_node": "handler_5_1623153090552",
      "previous_sibling": "handler_2_1623153090552"
    },
    {
      "type": "event_handler",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "What kind of food are you in the mood for?"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ]
      },
      "parent": "slot_5_1623153104801",
      "event_name": "focus",
      "dialog_node": "handler_7_1623153104802",
      "previous_sibling": "handler_2_1623153104802"
    },
    {
      "type": "frame",
      "title": "Restaurant Lookup Information Extraction",
      "parent": "node_9_1623668808871",
      "actions": [
        {
          "name": "main_webhook",
          "type": "webhook",
          "parameters": {
            "city": "$city",
            "action": "lookup",
            "number": "$number",
            "category": "$category"
          },
          "result_variable": "lookupResponse"
        }
      ],
      "metadata": {
        "_customization": {
          "mcr": true
        }
      },
      "conditions": "@categories || @city",
      "dialog_node": "node_3_1623153078750"
    },
    {
      "type": "standard",
      "title": "Restaurant Request",
      "output": {
        "generic": [
          {
            "values": [
              {
                "text": "I would be happy to help you find a restaurant. Can you describe what you're looking for?"
              }
            ],
            "response_type": "text",
            "selection_policy": "sequential"
          }
        ],
        "context_eraser": "<? context.clear() ?>"
      },
      "context": {},
      "conditions": "#Find_restaurant",
      "digress_in": "does_not_return",
      "dialog_node": "node_9_1623668808871"
    },
    {
      "type": "response_condition",
      "output": {
        "text": {
          "values": ["<? $lookupResponse.responseText ?>"],
          "selection_policy": "sequential"
        }
      },
      "parent": "node_3_1623153078750",
      "conditions": "$lookupResponse",
      "dialog_node": "response_2_1623661823347"
    },
    {
      "type": "slot",
      "parent": "node_3_1623153078750",
      "variable": "$city",
      "dialog_node": "slot_2_1623153090545",
      "previous_sibling": "response_2_1623661823347"
    },
    {
      "type": "slot",
      "parent": "node_3_1623153078750",
      "variable": "$category",
      "dialog_node": "slot_5_1623153104801",
      "previous_sibling": "slot_2_1623153090545"
    }
  ],
  "counterexamples": [],
  "system_settings": {
    "off_topic": {
      "enabled": true
    },
    "disambiguation": {
      "prompt": "Did you mean:",
      "enabled": true,
      "randomize": true,
      "max_suggestions": 5,
      "suggestion_text_policy": "title",
      "none_of_the_above_prompt": "None of the above"
    },
    "system_entities": {
      "enabled": true
    },
    "human_agent_assist": {
      "prompt": "Did you mean:"
    },
    "intent_classification": {
      "training_backend_version": "v2"
    },
    "spelling_auto_correct": true
  },
  "learning_opt_out": false,
  "name": "Watson Blogpost",
  "language": "en",
  "description": ""
}
